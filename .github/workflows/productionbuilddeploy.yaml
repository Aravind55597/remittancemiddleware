# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java Production Build Deploy

on:
  push:
    branches:
      - production
#  pull_request:
#    branches:
#      - main
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '8'
      - name: Build with Maven
        env:
          CODE_ENVIRONMENT: ${{ secrets.CODE_ENVIRONMENT_PROD }}
          HIBERNATE_DDL_AUTO: ${{ secrets.HIBERNATE_DDL_AUTO }}
          RDS_HOSTNAME: ${{ secrets.RDS_HOSTNAME }}
          RDS_DB_NAME: ${{secrets.RDS_NAME }}
          RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}
          RDS_PORT: ${{ secrets.RDS_PORT }}
          RDS_USERNAME: ${{secrets.RDS_USERNAME }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
        run: mvn -B package -DskipTests --file pom.xml
      - name: Upload JAR
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: target/tweet_scheduler-0.0.1-SNAPSHOT.jar
  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Download JAR
        uses: actions/download-artifact@v2
        with:
          name: artifact
      #Deploy the artifact (JAR) into AWS Beanstalk
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v13
        with:
          aws_access_key: ${{secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{secrets.AWS_SECRET_ACCESS_KEY }}
          #aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
          use_existing_version_if_available: false
          application_name: autocluck
          environment_name: Autocluck-env
          version_label: ${{github.SHA}}
          region: us-east-1
          deployment_package: tweet_scheduler-0.0.1-SNAPSHOT.jar